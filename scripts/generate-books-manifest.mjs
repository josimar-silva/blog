import fs from "fs/promises";
import path from "path";
import matter from "gray-matter";

const booksDirectory = path.join(process.cwd(), "__books");
const manifestPath = path.join(process.cwd(), "src/lib/data/books.ts");

async function getBooks() {
  const files = await fs.readdir(booksDirectory);
  const books = await Promise.all(
    files.map(async (file) => {
      if (path.extname(file) !== ".md") return null;
      const slug = file.replace(/\.md$/, "");
      const fullPath = path.join(booksDirectory, file);
      const fileContents = await fs.readFile(fullPath, "utf8");
      const { data, content } = matter(fileContents);

      return {
        ...data,
        slug,
        notesPreview: content.substring(0, 200),
      };
    }),
  );
  return books
    .filter(Boolean)
    .sort((book1, book2) => (book1.dateRead > book2.dateRead ? -1 : 1));
}

export async function generateBooksManifest() {
  try {
    console.log("Generating books manifest...");
    const books = await getBooks();

    const fileContent = `/**
 * MIT License
 *
 * Copyright (c) 2025 Josimar Silva
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// This file is auto-generated by scripts/generate-books-manifest.mjs
// Do not edit this file directly.

import { type Book } from '@/interfaces/book';

export const books: Book[] = ${JSON.stringify(books, null, 2)};
`;

    await fs.writeFile(manifestPath, fileContent);
    console.log(`Manifest generated successfully at ${manifestPath}`);
  } catch (error) {
    console.error("Error generating books manifest:", error);
    process.exit(1);
  }
}
